allprojects {
    apply plugin: 'java-library'
    apply plugin: 'jacoco'
    group = 'com.github'
    version = '1.0-SNAPSHOT'
    repositories {
        jcenter()
        maven {
            url 'https://jitpack.io'
        }
    }
}

subprojects {
    dependencies {
        // Use JUnit Jupiter API for testing.
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
        testImplementation 'org.junit.jupiter:junit-jupiter-params:5.6.2'

        // Use JUnit Jupiter Engine for testing.
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
    }

    test {
        // Use junit platform for unit tests
        useJUnitPlatform {
            includeTags "unit"
        }
        testLogging {
            exceptionFormat = "full"
            showStandardStreams = true
        }
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allJava
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled false
        html.destination file("${buildDir}/jacocoHtml")
        csv.enabled false
    }
}

codeCoverageReport.dependsOn {
    subprojects*.test
}