plugins {
    id "com.jfrog.bintray" version "1.8.5" apply false
}

allprojects {
    repositories {
        jcenter()
    }
    apply plugin: 'java-library'
    apply plugin: 'jacoco'
    apply plugin: 'maven-publish'
    group = 'com.github'
    version = System.getenv('VERSION')
}

subprojects {
    apply plugin: "com.jfrog.bintray"
    dependencies {
        // Use JUnit Jupiter API for testing.
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
        testImplementation 'org.junit.jupiter:junit-jupiter-params:5.6.2'

        // Use JUnit Jupiter Engine for testing.
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
    }

    test {
        // Use junit platform for unit tests
        useJUnitPlatform {
            includeTags "unit"
        }
        testLogging {
            exceptionFormat = "full"
            showStandardStreams = true
        }
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allJava
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    def pomConfig = {
        licenses {
            license {
                name "MIT"
                url "https://gist.githubusercontent.com/brimworks/9a75a113ace22b964d70ea9894af1fb1/raw/920257f41116ef6be325ad71858f4c15706cf12e/LICENSE.txt"
                distribution "repo"
            }
        }
        developers {
            developer {
                id "brimworks"
                name "Brian Maher"
                email "brian@brimworks.com"
            }
        }    
        scm {
           url "https://github.com/brimworks/json5.java"
        }
    }

    publishing {
        publications {
            MyPublication(MavenPublication) {
                from components.java
                artifact javadocJar
                artifact sourcesJar
                groupId 'com.brimworks'
                artifactId project.name
                version project.version
                pom.withXml {
                    def root = asNode()
                    root.appendNode('description', 'Brimworks implementation of '+project.name)
                    root.appendNode('name', project.name)
                    root.appendNode('url', 'https://github.com/brimworks/json5.java')
                    root.children().last() + pomConfig
                }
            }
        }
    }
    bintray {
        user = System.getenv('BINTRAY_USER')
        key = System.getenv('BINTRAY_KEY')
        pkg {
            repo = 'json5.java'
            name = 'json5.java'
            userOrg = 'brimworks'
            licenses = ['MIT']
            vcsUrl = 'https://github.com/brimworks/json5.java.git'
            version {
                name = project.version
                released  = new Date()
                vcsTag = project.version
            }
        }
        publications = ['MyPublication']
    }
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled false
        html.destination file("${buildDir}/jacocoHtml")
        csv.enabled false
    }
}

codeCoverageReport.dependsOn {
    subprojects*.test
}